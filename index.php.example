<?php

require_once 'vendor/autoload.php';
ini_set("xdebug.overload_var_dump", "off");

use Checkbox\CheckboxJsonApi;
use Checkbox\Config;
use Checkbox\Errors\InvalidCredentials;
use Checkbox\Errors\Validation;
use Checkbox\Errors\NoActiveShift;
use Checkbox\Errors\AlreadyOpenedShift;
use Checkbox\Errors\EmptyResponse;
use Checkbox\Models\CashRegisters\CashRegistersQueryParams;
use Checkbox\Models\Shifts\ShiftsQueryParams;

if (!function_exists('pre')) {
    function pre(){
        $numargs = func_num_args();
        $arguments = func_get_args();

        echo '<pre>';
        for($i = 0; $i < $numargs; $i++){
            var_dump($arguments[$i]);
        }
        echo '</pre>';
    }
}

try {
    $config = new Config([
        Config::API_URL => 'https://dev-api.checkbox.in.ua/api/v1',
        Config::LOGIN => 'some login',
        Config::PASSWORD => 'some password',
        Config::LICENSE_KEY => 'some license key'
    ]);

//    $api = new CheckboxJsonApi($config);
//    $api->signInCashier();
//    $api->signOutCashier();

    $api = (new CheckboxJsonApi())
        ->setConfig($config)
        ->setConnectTimeout(10)
        ->signInCashier();

    // mapped //


//    pre('profile', $api->getCashierProfile());

//    pre('cashier shift', $api->getCashierShift());
//    pre('get shift', $api->getShift('19b98dd3-a5ac-48b9-9eb6-6995e6eb567f'));

//    pre('get shifts', $api->getShifts());

//    pre('get shifts', $api->getShifts(new ShiftsQueryParams(
//        [ShiftsQueryParams::STATUS_CLOSED, ShiftsQueryParams::STATUS_OPENED], false, 2, 0
//    )));

//    pre('start shift', $api->createShift());
//    pre('close shift', $api->closeShift());


//    pre('cash registers', $api->getCashRegisters());
//    pre('cash registers', $api->getCashRegisters(new CashRegistersQueryParams(true, 3, 0)));

//    pre('cash register', $api->getCashRegister('a2e32685-b489-43e6-b658-faf4656f86d0'));
//    pre('cash register', $api->getCashRegister('1c9b7dfb-4ffd-4f40-83da-d9b758c0c29a'));

    // end mapped //

//    pre('sign cashier via pin code', $api->signInCashierViaPinCode('some pin code'));
//    pre('sign cashier via signature', $api->signInCashierViaSignature('some signature in base64'));
//    pre('ping tax service', $api->pingTaxServiceAction());


//    $api->signOutCashier();

} catch (InvalidCredentials $err) {
    pre('creds err', $err->getMessage());
}  catch (EmptyResponse $err) {
    pre('empty response', $err->getMessage());
} catch (Validation $err) {
    pre('valid err', $err->getMessage());
    pre('error detail', $err->getDetail());
} catch (NoActiveShift $err) {
    pre('no shift', $err->getMessage());
} catch (AlreadyOpenedShift $err) {
    pre('opened shift', $err->getMessage());
} catch (\Exception $err) {
    pre('default err', $err->getMessage());
}
