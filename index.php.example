<?php

require_once 'vendor/autoload.php';
ini_set("xdebug.overload_var_dump", "off");

use Checkbox\CheckboxJsonApi;
use Checkbox\Config;
use Checkbox\Errors\InvalidCredentials;
use Checkbox\Errors\Validation;
use Checkbox\Errors\NoActiveShift;
use Checkbox\Errors\AlreadyOpenedShift;
use Checkbox\Errors\EmptyResponse;
use Checkbox\Models\CashRegisters\CashRegistersQueryParams;
use Checkbox\Models\Shifts\ShiftsQueryParams;
use Checkbox\Models\Receipts\ReceiptsQueryParams;
use Checkbox\Models\Receipts\Discounts\Discounts;
use Checkbox\Models\Receipts\Discounts\DiscountModel;
use Checkbox\Models\Receipts\SellReceipt;
use Checkbox\Models\Receipts\Payments\Payments;
use Checkbox\Models\Receipts\Payments\CardPaymentPayload;
use Checkbox\Models\Receipts\Payments\CashPaymentPayload;


use Checkbox\Models\Receipts\Goods\Goods;
use Checkbox\Models\Receipts\Goods\GoodItemModel;
use Checkbox\Models\Receipts\Goods\GoodModel;


if (!function_exists('pre')) {
    function pre(){
        $numargs = func_num_args();
        $arguments = func_get_args();

        echo '<pre>';
        for($i = 0; $i < $numargs; $i++){
            var_dump($arguments[$i]);
        }
        echo '</pre>';
    }
}

try {
    $config = new Config([
        Config::API_URL => 'https://dev-api.checkbox.in.ua/api/v1',
        Config::LOGIN => 'some login',
        Config::PASSWORD => 'some password',
        Config::LICENSE_KEY => 'some license key'
    ]);

//    $api = new CheckboxJsonApi($config);
//    $api->signInCashier();
//    $api->signOutCashier();

    $api = (new CheckboxJsonApi())
        ->setConfig($config)
        ->setConnectTimeout(10)
        ->signInCashier();

    // profile (касир) //


//    pre('profile', $api->getCashierProfile());

//    pre('(REMOVED) sign cashier via pin code', $api->signInCashierViaPinCode('some pin code'));
//    pre('(REMOVED) sign cashier via signature', $api->signInCashierViaSignature('some signature in base64'));
//    pre('ping tax service', $api->pingTaxServiceAction());


    // shifts (смены) //


//    pre('cashier shift', $api->getCashierShift());
//    pre('get shift', $api->getShift('19b98dd3-a5ac-48b9-9eb6-6995e6eb567f'));

//    pre('get shifts', $api->getShifts());

//    pre('get shifts', $api->getShifts(new ShiftsQueryParams(
//        [ShiftsQueryParams::STATUS_CLOSED, ShiftsQueryParams::STATUS_OPENED], false, 2, 0
//    )));

//    pre('start shift', $api->createShift());
//    pre('close shift', $api->closeShift());


    // cash registers (пРРО) //


//    pre('cash registers', $api->getCashRegisters());
//    pre('cash registers', $api->getCashRegisters(new CashRegistersQueryParams(true, 3, 0)));

//    pre('cash register', $api->getCashRegister('3e650f3e-09b9-44e4-baea-f40f143cbb00'));
//    pre('cash register', $api->getCashRegister('1c9b7dfb-4ffd-4f40-83da-d9b758c0c29a'));
//    pre('cash register', $api->getCashRegisterInfo());


    // receipts (чеки) //

//    pre('get receipt', $api->getReceipts());

//    pre('get receipt', $api->getReceipts(new ReceiptsQueryParams(
//        '', '', false, 2, 0
//    )));

//    pre('get receipt', $api->getReceipt('c6a66550-44b8-4767-9bb0-66f0123c8efa'));

//    pre('get receipt pdf', $api->getReceiptPdf('c6a66550-44b8-4767-9bb0-66f0123c8efa'));

//    pre('get receipt pdf', $api->getReceiptHtml('c6a66550-44b8-4767-9bb0-66f0123c8efa'));

//    pre('get receipt pdf', $api->getReceiptText('c6a66550-44b8-4767-9bb0-66f0123c8efa'));

//    pre('get receipt pdf', $api->getReceiptQrCodeImage('c6a66550-44b8-4767-9bb0-66f0123c8efa'));

//    $rawImageContent = $api->getReceiptQrCodeImage('c6a66550-44b8-4767-9bb0-66f0123c8efa');
//    echo '<img src="data:image/png;base64,' . base64_encode($rawImageContent) . '"/>';

//    pre('all taxes', $api->getAllTaxes());


/*
     // sale receipt
    $allTaxes = $api->getAllTaxes();
    $tax = $allTaxes->getTaxByLabel('Акцизний збір');
    $goodTaxes = $allTaxes->getTaxesByLabel('ПДВ');
    $taxCodes = [];

    foreach ($goodTaxes->results as $goodTax) {
        $taxCodes[] = $goodTax->code;
    }

    $receipt = new SellReceipt(
        'Вася Пупкин',
        'Отдел продаж',
        new Goods(
            [
                new GoodItemModel(
                    new GoodModel(
                        'vm-123', // good_id
                        5000, // 50 грн
                        'Биовак',
                        '5р47ле78675е3',
                        'хидер',
                        'футер',
                        '',
                        $goodTaxes
                    ),
                    0,
                    1000,
                    false,
                    $allTaxes->getTaxesByLabel('Акцизний збір'),
                    '',
                    new Discounts(
                        [
                            new DiscountModel(
                                DiscountModel::TYPE_DISCOUNT,
                                DiscountModel::MODE_VALUE,
                                100, // 1 грн
                                0,
                                $tax->code,
                                $taxCodes,
                                'one good discount'
                            )
                        ]
                    )
                )
            ]
        ),
        'igorbunov.ua@gmail.com',
        new Discounts(
            [
                new DiscountModel(
                    DiscountModel::TYPE_DISCOUNT,
                    DiscountModel::MODE_VALUE,
                    200, // 1 грн
                    0,
                    $tax->code,
                    $taxCodes,
                    'total discount'
                )
            ]
        ),
        new Payments([
            new CardPaymentPayload(
                400,
                0,
                'beznalichka'
            ),
            new CashPaymentPayload(
                4500,
                'nalichka'
            )
        ]),
        'check header',
        'check footer',
        '45435h543twrege'
    );

    pre('create sell receipt', $api->createSellReceipt($receipt));

*/

    /*

         // sale receipt
            $allTaxes = $api->getAllTaxes();
            $tax = $allTaxes->getTaxByLabel('Акцизний збір');
            $goodTaxes = $allTaxes->getTaxesByLabel('ПДВ');
            $taxCodes = [];

            foreach ($goodTaxes->results as $goodTax) {
                $taxCodes[] = $goodTax->code;
            }

            $receipt = new SellReceipt(
                'Вася Пупкин',
                'Отдел продаж',
                new Goods(
                    [
                        new GoodItemModel(
                            new GoodModel(
                                'vm-123', // good_id
                                5000, // 50 грн
                                'Биовак',
                                '5р47ле78675е3',
                                'хидер',
                                'футер',
                                '',
                                $goodTaxes
                            ),
                            0,
                            1000,
                            false,
                            $allTaxes->getTaxesByLabel('Акцизний збір'),
                            '',
                            new Discounts(
                                [
                                    new DiscountModel(
                                        DiscountModel::TYPE_DISCOUNT,
                                        DiscountModel::MODE_VALUE,
                                        100, // 1 грн
                                        0,
                                        $tax->code,
                                        $taxCodes,
                                        'one good discount'
                                    )
                                ]
                            )
                        ),
                        new GoodItemModel(
                            new GoodModel(
                                'vm-124', // good_id
                                2000, // 20 грн
                                'Биовак 2',
                                'hhhregerg',
                                'хидер2',
                                'футер2',
                                '',
                                $goodTaxes
                            ),
                            0,
                            2000, // 1 шт
                            false,
                            $allTaxes->getTaxesByLabel('Акцизний збір'),
                            '',
                            new Discounts(
                                [
                                    new DiscountModel(
                                        DiscountModel::TYPE_EXTRA_CHARGE,
                                        DiscountModel::MODE_VALUE,
                                        200, // 1 грн
                                        0,
                                        $tax->code,
                                        $taxCodes,
                                        'one good increace'
                                    )
                                ]
                            )
                        )
                    ]
                ),
                'igorbunov.ua@gmail.com',
                new Discounts(
                    [
                        new DiscountModel(
                            DiscountModel::TYPE_EXTRA_CHARGE,
                            DiscountModel::MODE_VALUE,
                            200, // 1 грн
                            0,
                            $tax->code,
                            $taxCodes,
                            'total increace'
                        )
                    ]
                ),
                new Payments([
                    new CardPaymentPayload(
                        4700,
                        0,
                        'beznalichka'
                    ),
                    new CashPaymentPayload(
                        4700,
                        'nalichka'
                    )
                ]),
                'check header',
                'check footer',
                '45435h543twrege'
            );

            pre('create sell receipt 2', $api->createSellReceipt($receipt));

    */


//    $api->signOutCashier();

} catch (InvalidCredentials $err) {
    pre('creds err', $err->getMessage());
}  catch (EmptyResponse $err) {
    pre('empty response', $err->getMessage());
} catch (Validation $err) {
    pre('valid err', $err->getMessage());
    pre('error detail', $err->getDetail());
} catch (NoActiveShift $err) {
    pre('no shift', $err->getMessage());
} catch (AlreadyOpenedShift $err) {
    pre('opened shift', $err->getMessage());
} catch (\Exception $err) {
    pre('default err', $err->getMessage());
}
